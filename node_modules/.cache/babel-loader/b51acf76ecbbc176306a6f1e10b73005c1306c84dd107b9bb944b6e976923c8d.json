{"ast":null,"code":"var _jsxFileName = \"/Users/markhuntley/Code/contentful-integration/split/src/locations/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Paragraph } from '@contentful/f36-components';\nimport { /* useCMA, */useSDK } from '@contentful/react-apps-toolkit';\n// import PropTypes from 'prop-types';\n// import { Button } from '@contentful/forma-36-react-components';\n// import tokens from '@contentful/forma-36-tokens';\n// import { css } from 'emotion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  const sdk = useSDK();\n  /*\n     To use the cma, inject it as follows.\n     If it is not needed, you can remove the next line.\n  */\n  // const cma = useCMA();\n\n  //  const styles = {\n  //   button: css({\n  //     marginBottom: tokens.spacingS,\n  //   }),\n  // };\n\n  // const getExperimentUrl = (projectId, experimentId, environment) => {\n  //   return `https://app.optimizely.com/v2/projects/${projectId}/experiments/${experimentId}/variations`;\n  // };\n\n  // const getAllExperimentsUrl = (projectId) => {\n  //   return `https://app.optimizely.com/v2/projects/${projectId}/experiments`;\n  // };\n\n  // const getAllExperimentNames = () => {\n\n  // }\n\n  // export default function Sidebar(props) {\n  //   const [experimentId, setExperimentId] = useState(props.sdk.entry.fields.experimentId.getValue());\n  //   const { parameters } = props.sdk;\n\n  //   useEffect(() => {\n  //     props.sdk.window.startAutoResizer();\n  //     return () => {\n  //       props.sdk.window.stopAutoResizer();\n  //     };\n  //   }, [props.sdk.window]);\n\n  //   useEffect(() => {\n  //     const unsubscribe = props.sdk.entry.fields.experimentId.onValueChanged((value) => {\n  //       setExperimentId(value);\n  //     });\n  //     return () => {\n  //       return unsubscribe();\n  //     };\n  //   }, [props.sdk.entry.fields.experimentId]);\n\n  //   const projectId = parameters.installation.optimizelyProjectId;\n\n  //   return (\n  //     <div data-test-id=\"sidebar\">\n  //       <Button\n  //         buttonType=\"primary\"\n  //         isFullWidth\n  //         className={styles.button}\n  //         disabled={!experimentId}\n  //         href={getExperimentUrl(projectId, experimentId)}\n  //         target=\"_blank\"\n  //         data-test-id=\"view-experiment\">\n  //         View in Optimizely\n  //       </Button>\n  //       <Button\n  //         buttonType=\"muted\"\n  //         isFullWidth\n  //         className={styles.button}\n  //         target=\"_blank\"\n  //         href={getAllExperimentsUrl(projectId)}\n  //         data-test-id=\"view-all\">\n  //         View all experiments\n  //       </Button>\n  //     </div>\n  //   );\n  // }\n\n  // Sidebar.propTypes = {\n  //   sdk: PropTypes.shape({\n  //     entry: PropTypes.shape({\n  //       fields: PropTypes.shape({\n  //         experimentId: PropTypes.object.isRequired,\n  //       }).isRequired,\n  //     }),\n  //     window: PropTypes.object.isRequired,\n  //     parameters: PropTypes.shape({\n  //       installation: PropTypes.shape({\n  //         optimizelyProjectId: PropTypes.string.isRequired,\n  //       }),\n  //     }),\n  //   }).isRequired,\n  // };\n\n  console.log(\"hello\");\n  return /*#__PURE__*/_jsxDEV(Paragraph, {\n    children: [\"Hello Cole Man (AppId: \", sdk.ids.app, \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n};\n_s(Sidebar, \"m0NK9T07Wix4wkTNxkKFby+6qME=\", false, function () {\n  return [useSDK];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","Paragraph","useSDK","jsxDEV","_jsxDEV","Sidebar","_s","sdk","console","log","children","ids","app","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/markhuntley/Code/contentful-integration/split/src/locations/Sidebar.jsx"],"sourcesContent":["import React from 'react';\nimport { Paragraph } from '@contentful/f36-components';\nimport { /* useCMA, */ useSDK } from '@contentful/react-apps-toolkit';\n// import PropTypes from 'prop-types';\n// import { Button } from '@contentful/forma-36-react-components';\n// import tokens from '@contentful/forma-36-tokens';\n// import { css } from 'emotion';\n\nconst Sidebar = () => {\n  const sdk = useSDK();\n  /*\n     To use the cma, inject it as follows.\n     If it is not needed, you can remove the next line.\n  */\n  // const cma = useCMA();\n\n //  const styles = {\n\t//   button: css({\n\t//     marginBottom: tokens.spacingS,\n\t//   }),\n\t// };\n\n\t// const getExperimentUrl = (projectId, experimentId, environment) => {\n\t//   return `https://app.optimizely.com/v2/projects/${projectId}/experiments/${experimentId}/variations`;\n\t// };\n\n\t// const getAllExperimentsUrl = (projectId) => {\n\t//   return `https://app.optimizely.com/v2/projects/${projectId}/experiments`;\n\t// };\n\n\t// const getAllExperimentNames = () => {\n\n\t// }\n\n\t// export default function Sidebar(props) {\n\t//   const [experimentId, setExperimentId] = useState(props.sdk.entry.fields.experimentId.getValue());\n\t//   const { parameters } = props.sdk;\n\n\t//   useEffect(() => {\n\t//     props.sdk.window.startAutoResizer();\n\t//     return () => {\n\t//       props.sdk.window.stopAutoResizer();\n\t//     };\n\t//   }, [props.sdk.window]);\n\n\t//   useEffect(() => {\n\t//     const unsubscribe = props.sdk.entry.fields.experimentId.onValueChanged((value) => {\n\t//       setExperimentId(value);\n\t//     });\n\t//     return () => {\n\t//       return unsubscribe();\n\t//     };\n\t//   }, [props.sdk.entry.fields.experimentId]);\n\n\t//   const projectId = parameters.installation.optimizelyProjectId;\n\n\t//   return (\n\t//     <div data-test-id=\"sidebar\">\n\t//       <Button\n\t//         buttonType=\"primary\"\n\t//         isFullWidth\n\t//         className={styles.button}\n\t//         disabled={!experimentId}\n\t//         href={getExperimentUrl(projectId, experimentId)}\n\t//         target=\"_blank\"\n\t//         data-test-id=\"view-experiment\">\n\t//         View in Optimizely\n\t//       </Button>\n\t//       <Button\n\t//         buttonType=\"muted\"\n\t//         isFullWidth\n\t//         className={styles.button}\n\t//         target=\"_blank\"\n\t//         href={getAllExperimentsUrl(projectId)}\n\t//         data-test-id=\"view-all\">\n\t//         View all experiments\n\t//       </Button>\n\t//     </div>\n\t//   );\n\t// }\n\n\t// Sidebar.propTypes = {\n\t//   sdk: PropTypes.shape({\n\t//     entry: PropTypes.shape({\n\t//       fields: PropTypes.shape({\n\t//         experimentId: PropTypes.object.isRequired,\n\t//       }).isRequired,\n\t//     }),\n\t//     window: PropTypes.object.isRequired,\n\t//     parameters: PropTypes.shape({\n\t//       installation: PropTypes.shape({\n\t//         optimizelyProjectId: PropTypes.string.isRequired,\n\t//       }),\n\t//     }),\n\t//   }).isRequired,\n\t// };\n\n  console.log(\"hello\");\n  return <Paragraph>Hello Cole Man (AppId: {sdk.ids.app})</Paragraph>;\n};\n\nexport default Sidebar;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,4BAA4B;AACtD,SAAS,aAAcC,MAAM,QAAQ,gCAAgC;AACrE;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,GAAG,GAAGL,MAAM,CAAC,CAAC;EACpB;AACF;AACA;AACA;EACE;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAECM,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpB,oBAAOL,OAAA,CAACH,SAAS;IAAAS,QAAA,GAAC,yBAAuB,EAACH,GAAG,CAACI,GAAG,CAACC,GAAG,EAAC,GAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AACrE,CAAC;AAACV,EAAA,CA3FID,OAAO;EAAA,QACCH,MAAM;AAAA;AAAAe,EAAA,GADdZ,OAAO;AA6Fb,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}